@import '../../../global.css';
.container {
  position: relative;
  max-width: 733px;
  background-color: var(--grayF4);
}

.header {
  display: flex;
  justify-content: space-between;
  background-color: var(--grayC4);
  padding: 19px 40px;
  min-height: 55px;
}
.headerActive {
  background-color: var(--red);
}
.taskName {
  font-weight: 700;
}
.count {
  font-weight: 400;
}
.timerDisplay {
  width: 400px;
  font-weight: 200;
  margin-right: 25px;
  user-select: none;
}
.timerDisplayActive {
  color: var(--red) !important;
}
.content {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 70px;
  padding-bottom: 107px;
}
.timerConteiner {
  display: flex;
  align-items: center;
  position: relative;
}

.startBtn {
  padding: 19px 50px;
  font-weight: 500;
  margin-right: 25px;
}
.startBtn:disabled {
  padding: 19px 50px;
  font-weight: 500;
  margin-right: 25px;
  background-color: var(--green) !important;
  cursor: auto !important;
}

.stopBtn {
  padding: 17px 48px;
  font-weight: 500;
}
.stopBtn:disabled > span {
  color: var(--grayC4) !important;
}
.stopBtn:disabled {
  border-color: var(--grayC4);
}
.addBtn {
  position: absolute;
  right: -59px;
  box-shadow: 0px 0px 10px 2px rgba(32, 31, 31, 0.56);
  border-radius: 50%;
}
.addBtn svg circle {
  transition: fill 0.15s ease-in-out;
}
.addBtn:hover svg circle {
  fill: var(--green89);
}
.addBtn:disabled svg circle {
  fill: var(--grayC4) !important;
}
.addBtn:disabled {
  cursor: auto;
}
.discribeBlock {
  margin-bottom: 32px;
  min-height: 19px;
}
.headerBreakActive {
  background-color: var(--green);
}
.timerBreakDisplayActive {
  color: var(--green) !important;
}
.settingsBtn {
  position: absolute;
  width: 50px;
  height: 50px;
  right: 10px;
  top: 10px;
  transition: transform 0.4s ease-in-out;
}
.settingsBtn:hover {
  transform: rotate(90deg);
}
.settingsBtn:disabled:hover {
  transform: rotate(0deg);
}
.settingsWindow {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 2;
  background-color: gray;
  padding: 20px;
}
.btnCloseSettingWindow {
  position: absolute;
  width: 20px;
  height: 20px;
  z-index: 3;
  top: 10px;
  right: 10px;
  transition: transform 0.4s ease-in-out;
}

.btnCloseCross {
  position: absolute;
  width: 20px;
  height: 2px;
  border-radius: 10px;
  background-color: var(--grayF4);
}
.btnCloseCross:not(:last-child) {
  transform: rotate(45deg);
}
.btnCloseCross:last-child {
  transform: rotate(-45deg);
}
.btnCloseSettingWindow:hover {
  transform: scale(1.2);
}
.label {
  display: flex;
  align-items: center;
}
.containerTime {
  display: flex;
  flex-direction: column;
  margin-right: 5px;
  margin-left: 5px;
}
.input {
  width: 40px;
  height: 40px;
  background-color: white;
  border-radius: 10px;
  border: none;
  padding: 3px;
  text-align: center;
  font-family: inherit;
  font-size: 17px;
  color: black;
}
.input::-webkit-outer-spin-button,
.input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.labelText {
  display: block;
  margin-right: 20px;
  width: 75%;
  text-align: right;
}
.btnChangeTime {
  color: white;
  font-size: 20px;
  padding: 5px;
  transition: transform 0.2s ease-in-out;
}
.btnChangeTime:hover {
  transform: scale(1.5);
}
.checkbox {
  display: inline-block;
  height: 28px;
  line-height: 28px;
  position: relative;
  vertical-align: middle;
  font-size: 14px;
  user-select: none;
  cursor: pointer;
}
.checkboxSwitch {
  position: relative;
  display: inline-block;
  width: 56px;
  height: 28px;
  border-radius: 25%/50%;
  vertical-align: top;
  background: #999999;
  transition: 0.2s;
}
.checkboxSwitch:before {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  display: inline-block;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: white;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.3);
  transition: 0.15s;
}
.checkbox input[type='checkbox'] {
  display: block;
  width: 0;
  height: 0;
  position: absolute;
  z-index: -1;
  opacity: 0;
}
.checkbox input[type='checkbox']:active + .checkboxSwitch:before {
  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.3);
}
.checkbox input[type='checkbox']:checked + .checkboxSwitch:before {
  transform: translateX(28px);
}
.checkbox input[type='checkbox']:checked + .checkboxSwitch {
  background: var(--green);
}
